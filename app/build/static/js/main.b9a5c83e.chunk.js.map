{"version":3,"sources":["components/UI/Header/Header.js","components/HomePage/HomePage.js","utils/apiRequests.js","utils/apiEndpoints.js","utils/helpers.js","components/UI/Messenger/Messenger.js","reducers/MessageListReducer.js","components/UI/Alert/Alert.js","components/UI/MeetingInfo/MeetingInfo.js","components/UI/CallPageFooter/CallPageFooter.js","components/UI/CallPageHeader/CallPageHeader.js","components/CallPage/CallPage.js","components/NoMatch/NoMatch.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","style","paddingLeft","src","opacity","icon","faQuestionCircle","faExclamationCircle","faCog","HomePage","history","useHistory","marginTop","backgroundColor","color","onClick","uid","shortid","generate","push","faVideo","faKeyboard","placeholder","href","postRequest","url","a","payload","axios","post","then","resp","data","catch","err","error","response","getRequest","get","BASE_URL","formatDate","timestamp","moment","format","Messenger","setIsMessenger","sendMsg","messageList","useState","msg","setMsg","faTimes","faUserFriends","faCommentAlt","map","item","user","time","value","onChange","e","target","handleChangeMsg","onKeyDown","key","handleKeyDown","faPaperPlane","MessageListReducer","state","action","draftState","type","Alert","messageAlert","MeetingInfo","setMeetInfoPopup","faUser","faCopy","navigator","clipboard","writeText","faShieldAlt","CallPageFooter","isPresenting","stopScreenShare","screenShare","isAudio","toggleAudio","disconnectCall","faAngleUp","faMicrophone","faMicrophoneSlash","faPhone","faClosedCaptioning","faDesktop","CallPageHeader","isMessenger","setMessageAlert","interval","currentTime","setCurrentTime","useEffect","setInterval","clearInterval","alert","faUserCircle","peer","socket","io","connect","initialState","CallPage","id","useParams","isAdmin","window","location","hash","origin","pathname","alertTimeout","useReducer","messageListReducer","streamObj","setStreamObj","screenCastStream","setScreenCastStream","meetInfoPopup","setIsPresenting","setIsAudio","initWebRTC","on","signal","getRecieverCode","code","mediaDevices","getUserMedia","video","audio","stream","Peer","initiator","trickle","signalData","emit","cbData","console","log","clearTimeout","toString","Date","now","isPopup","setTimeout","document","querySelector","srcObject","URL","createObjectURL","play","controls","getVideoTracks","forEach","track","stop","replaceTrack","getDisplayMedia","cursor","screenStream","getTracks","onended","getAudioTracks","enabled","destroy","reload","send","NoMatch","to","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b9a5c83e.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faQuestionCircle,\n  faExclamationCircle,\n  faCog,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport './Header.scss';\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"logo\">\n        <img style={{paddingLeft:43}} src=\"https://drkrutikshah.online/academylogo.png\" />\n        <span className=\"help-text\">Webinar</span>\n      </div>\n      <div className=\"action-btn\" style={{opacity:0}}>\n        <FontAwesomeIcon className=\"icon-block\" icon={faQuestionCircle} />\n        <FontAwesomeIcon className=\"icon-block\" icon={faExclamationCircle} />\n        <FontAwesomeIcon className=\"icon-block\" icon={faCog} />\n      </div>\n    </div>\n  );\n};\nexport default Header;\n","import { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faVideo, faKeyboard } from \"@fortawesome/free-solid-svg-icons\";\nimport shortid from \"shortid\";\nimport \"./HomePage.scss\";\nimport Header from \"../UI/Header/Header\";\n\nconst HomePage = () => {\n  const history = useHistory();\n\n  const startCall = () => {\n    const uid = shortid.generate();\n    history.push(`/${uid}#init`);\n  };\n\n  return (\n    <div className=\"home-page\">\n      <Header />\n      <div className=\"body\">\n        <div className=\"left-side\" style={{marginTop:-92}}>\n          <div className=\"content\">\n            <h2>Homeopathy video meetings. Now available for everyone.</h2>\n            <p>\n              We re-engineered the service we built for secure Homeopathy\n              meetings make it free and available for all.\n            </p>\n            <div style={{marginTop:-4}} className=\"action-btn\">\n              <button  className=\"btn\" style={{backgroundColor:'orangered', color:'#fff'}} onClick={startCall}>\n                <FontAwesomeIcon className=\"icon-block\" icon={faVideo} />\n                New Meeting\n              </button>\n              <div style={{opacity:0}} className=\"input-block\">\n                <div className=\"input-section\">\n                  <FontAwesomeIcon className=\"icon-block\" icon={faKeyboard} />\n                  <input placeholder=\"Enter a code or link\" />\n                </div>\n                <button className=\"btn no-bg\">Join</button>\n              </div>\n            </div>\n          </div>\n          <div className=\"help-text\" >\n            <a style={{color:'orangered'}} href=\"https://drkrutkishah.online\">Learn more</a> SHAH Webinar\n          </div>\n        </div>\n        <div className=\"right-side\"  style={{marginTop:-92}}>\n          <div className=\"content\">\n            <img src=\"/homepage.jpg\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default HomePage;\n","import axios from 'axios';\n\nexport const postRequest = async (url, payload = {}) => {\n    const data = await axios.post(url, payload)\n        .then(resp => resp.data)\n        .catch(err => (\n            { error: err.response.data }\n        ));\n    return data;\n}\n\nexport const putRequest = async (url, payload = {}) => {\n    const data = await axios.put(url, payload)\n        .then(resp => resp.data)\n        .catch(err => (\n            { error: err.response.data }\n        ));\n    return data;\n}\n\nexport const getRequest = async (url) => {\n    const data = await axios.get(url)\n        .then(resp => resp.data)\n        .catch(err => (\n            { error: err.response.data }\n        ));\n    return data;\n}\n\nexport const deleteRequest = async (url) => {\n    const data = await axios.delete(url)\n        .then(resp => resp.data)\n        .catch(err => (\n            { error: err.response.data }\n        ));\n    return data;\n}","export const BASE_URL = \" http://127.0.0.1:4000\";\nexport const SAVE_CALL_ID = \"/api/save-call-id\";\nexport const GET_CALL_ID = \"/api/get-call-id\";\n","import moment from 'moment';\n\nexport const formatDate = (timestamp) => {\n    return moment(timestamp).format(\"h:mm A\");\n}","import { useState } from \"react\";\nimport \"./Messenger.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTimes,\n  faUserFriends,\n  faCommentAlt,\n  faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { formatDate } from \"./../../../utils/helpers\";\n\nconst Messenger = ({ setIsMessenger, sendMsg, messageList }) => {\n  const [msg, setMsg] = useState(\"\");\n\n  const handleChangeMsg = (e) => {\n    setMsg(e.target.value);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      sendMsg(msg);\n      setMsg(\"\");\n    }\n  };\n\n  const handleSendMsg = () => {\n    sendMsg(msg);\n    setMsg(\"\");\n  };\n\n  return (\n    <div className=\"messenger-container\">\n      <div className=\"messenger-header\">\n        <h3>Meeting details</h3>\n        <FontAwesomeIcon\n          className=\"icon\"\n          icon={faTimes}\n          onClick={() => {\n            setIsMessenger(false);\n          }}\n        />\n      </div>\n\n      <div className=\"messenger-header-tabs\">\n        <div className=\"tab\">\n          <FontAwesomeIcon className=\"icon\" icon={faUserFriends} />\n          <p>People (1)</p>\n        </div>\n        <div className=\"tab active\">\n          <FontAwesomeIcon className=\"icon\" icon={faCommentAlt} />\n          <p>Chat</p>\n        </div>\n      </div>\n\n      <div className=\"chat-section\">\n        {messageList.map((item) => (\n          <div key={item.time} className=\"chat-block\">\n            <div className=\"sender\">\n              {item.user} <small>{formatDate(item.time)}</small>\n            </div>\n            <p className=\"msg\">{item.msg}</p>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"send-msg-section\">\n        <input\n          placeholder=\"Send a message to everyone\"\n          value={msg}\n          onChange={(e) => handleChangeMsg(e)}\n          onKeyDown={(e) => handleKeyDown(e)}\n        />\n        <FontAwesomeIcon\n          className=\"icon\"\n          icon={faPaperPlane}\n          onClick={handleSendMsg}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Messenger;\n","const MessageListReducer = (state, action) => {\n  let draftState = [...state];\n  switch (action.type) {\n    case \"addMessage\":\n      return [...draftState, action.payload];\n    default:\n      return state;\n  }\n};\n\nexport default MessageListReducer;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCommentAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./Alert.scss\";\n\nconst Alert = ({ messageAlert }) => {\n  return (\n    <div className=\"message-alert-popup\">\n      <div className=\"alert-header\">\n        <FontAwesomeIcon className=\"icon\" icon={faCommentAlt} />\n        <h3>{messageAlert.payload.user}</h3>\n      </div>\n      <p className=\"alert-msg\">{messageAlert.payload.msg}</p>\n    </div>\n  );\n};\n\nexport default Alert;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCopy,\n  faTimes,\n  faUser,\n  faShieldAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./MeetingInfo.scss\";\n\nconst MeetingInfo = ({ setMeetInfoPopup, url }) => {\n  return (\n    <div className=\"meeting-info-block\">\n      <div className=\"meeting-header\">\n        <h3>Your meeting's ready</h3>\n        <FontAwesomeIcon\n          className=\"icon\"\n          icon={faTimes}\n          onClick={() => {\n            setMeetInfoPopup(false);\n          }}\n        />\n      </div>\n      <button className=\"add-people-btn\">\n        <FontAwesomeIcon className=\"icon\" icon={faUser} />\n        Add Others\n      </button>\n      <p className=\"info-text\">\n        Or share this meeting link with others you want in the meeting\n      </p>\n      <div className=\"meet-link\">\n        <span>{url}</span>\n        <FontAwesomeIcon\n          className=\"icon\"\n          icon={faCopy}\n          onClick={() => navigator.clipboard.writeText(url)}\n        />\n      </div>\n      <div className=\"permission-text\">\n        <FontAwesomeIcon className=\"icon red\" icon={faShieldAlt} />\n        <p className=\"small-text\">\n          People who use this meeting link must get your permission before they\n          can join.\n        </p>\n      </div>\n      <p className=\"small-text\">Joined SHAH WEBINAR</p>\n    </div>\n  );\n};\n\nexport default MeetingInfo;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faVideo,\n  faMicrophone,\n  faPhone,\n  faAngleUp,\n  faClosedCaptioning,\n  faDesktop,\n  faMicrophoneSlash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./CallPageFooter.scss\";\n\nconst CallPageFooter = ({\n  isPresenting,\n  stopScreenShare,\n  screenShare,\n  isAudio,\n  toggleAudio,\n  disconnectCall,\n}) => {\n  return (\n    <div className=\"footer-item\">\n      <div className=\"left-item\">\n        <div className=\"icon-block\">\n          Meeting details\n          <FontAwesomeIcon className=\"icon\" icon={faAngleUp} />\n        </div>\n      </div>\n      <div className=\"center-item\">\n        <div\n          className={`icon-block ${!isAudio ? \"red-bg\" : null}`}\n          onClick={() => toggleAudio(!isAudio)}\n        >\n          <FontAwesomeIcon\n            className=\"icon\"\n            icon={isAudio ? faMicrophone : faMicrophoneSlash}\n          />\n        </div>\n        <div className=\"icon-block\" onClick={disconnectCall}>\n          <FontAwesomeIcon className=\"icon red\" icon={faPhone} />\n        </div>\n        <div className=\"icon-block\">\n          <FontAwesomeIcon className=\"icon\" icon={faVideo} />\n        </div>\n      </div>\n      <div className=\"right-item\">\n        <div className=\"icon-block\">\n          <FontAwesomeIcon className=\"icon red\" icon={faClosedCaptioning} />\n          <p className=\"title\">Turn on captions</p>\n        </div>\n\n        {isPresenting ? (\n          <div className=\"icon-block\" onClick={stopScreenShare}>\n            <FontAwesomeIcon className=\"icon red\" icon={faDesktop} />\n            <p className=\"title\">Stop presenting</p>\n          </div>\n        ) : (\n          <div className=\"icon-block\" onClick={screenShare}>\n            <FontAwesomeIcon className=\"icon red\" icon={faDesktop} />\n            <p className=\"title\">Present now</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CallPageFooter;\n","import { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUserFriends,\n  faCommentAlt,\n  faUserCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./CallPageHeader.scss\";\nimport { formatDate } from \"./../../../utils/helpers\";\n\nconst CallPageHeader = ({\n  isMessenger,\n  setIsMessenger,\n  messageAlert,\n  setMessageAlert,\n}) => {\n  let interval = null;\n  const [currentTime, setCurrentTime] = useState(() => {\n    return formatDate();\n  });\n\n  useEffect(() => {\n    interval = setInterval(() => setCurrentTime(formatDate()), 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <div className=\"frame-header\">\n      <div className=\"header-items icon-block\">\n        <FontAwesomeIcon className=\"icon\" icon={faUserFriends} />\n      </div>\n      <div\n        className=\"header-items icon-block\"\n        onClick={() => {\n          setIsMessenger(true);\n          setMessageAlert({});\n        }}\n      >\n        <FontAwesomeIcon className=\"icon\" icon={faCommentAlt} />\n        {!isMessenger && messageAlert.alert && (\n          <span className=\"alert-circle-icon\"></span>\n        )}\n      </div>\n      <div className=\"header-items date-block\">{currentTime}</div>\n      <div className=\"header-items icon-block\">\n        <FontAwesomeIcon className=\"icon profile\" icon={faUserCircle} />\n      </div>\n    </div>\n  );\n};\n\nexport default CallPageHeader;\n","import { useEffect, useReducer, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { getRequest, postRequest } from \"./../../utils/apiRequests\";\nimport {\n  BASE_URL,\n  GET_CALL_ID,\n  SAVE_CALL_ID,\n} from \"./../../utils/apiEndpoints\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./CallPage.scss\";\nimport Messenger from \"./../UI/Messenger/Messenger\";\nimport MessageListReducer from \"../../reducers/MessageListReducer\";\nimport Alert from \"../UI/Alert/Alert\";\nimport MeetingInfo from \"../UI/MeetingInfo/MeetingInfo\";\nimport CallPageFooter from \"../UI/CallPageFooter/CallPageFooter\";\nimport CallPageHeader from \"../UI/CallPageHeader/CallPageHeader\";\n\nlet peer = null;\nconst socket = io.connect(\"http://localhost:4000\");\nconst initialState = [];\n\nconst CallPage = () => {\n  const history = useHistory();\n  let { id } = useParams();\n  const isAdmin = window.location.hash == \"#init\" ? true : false;\n  const url = `${window.location.origin}${window.location.pathname}`;\n  let alertTimeout = null;\n\n  const [messageList, messageListReducer] = useReducer(\n    MessageListReducer,\n    initialState\n  );\n\n  const [streamObj, setStreamObj] = useState();\n  const [screenCastStream, setScreenCastStream] = useState();\n  const [meetInfoPopup, setMeetInfoPopup] = useState(false);\n  const [isPresenting, setIsPresenting] = useState(false);\n  const [isMessenger, setIsMessenger] = useState(false);\n  const [messageAlert, setMessageAlert] = useState({});\n  const [isAudio, setIsAudio] = useState(true);\n\n  useEffect(() => {\n    if (isAdmin) {\n      setMeetInfoPopup(true);\n    }\n    initWebRTC();\n    socket.on(\"code\", (data) => {\n      peer.signal(data);\n    });\n  }, []);\n\n  const getRecieverCode = async () => {\n    const response = await getRequest(`${BASE_URL}${GET_CALL_ID}/${id}`);\n    if (response.code) {\n      peer.signal(response.code);\n    }\n  };\n\n  const initWebRTC = () => {\n    navigator.mediaDevices\n      .getUserMedia({\n        video: true,\n        audio: true,\n      })\n      .then((stream) => {\n        setStreamObj(stream);\n\n        peer = new Peer({\n          initiator: isAdmin,\n          trickle: false,\n          stream: stream,\n        });\n\n        if (!isAdmin) {\n          getRecieverCode();\n        }\n\n        peer.on(\"signal\", async (data) => {\n          if (isAdmin) {\n            let payload = {\n              id,\n              signalData: data,\n            };\n            await postRequest(`${BASE_URL}${SAVE_CALL_ID}`, payload);\n          } else {\n            socket.emit(\"code\", data, (cbData) => {\n              console.log(\"code sent\");\n            });\n          }\n        });\n\n        peer.on(\"connect\", () => {\n          // wait for 'connect' event before using the data channel\n        });\n\n        peer.on(\"data\", (data) => {\n          clearTimeout(alertTimeout);\n          messageListReducer({\n            type: \"addMessage\",\n            payload: {\n              user: \"other\",\n              msg: data.toString(),\n              time: Date.now(),\n            },\n          });\n\n          setMessageAlert({\n            alert: true,\n            isPopup: true,\n            payload: {\n              user: \"other\",\n              msg: data.toString(),\n            },\n          });\n\n          alertTimeout = setTimeout(() => {\n            setMessageAlert({\n              ...messageAlert,\n              isPopup: false,\n              payload: {},\n            });\n          }, 10000);\n        });\n\n        peer.on(\"stream\", (stream) => {\n          // got remote video stream, now let's show it in a video tag\n          let video = document.querySelector(\"video\");\n\n          if (\"srcObject\" in video) {\n            video.srcObject = stream;\n          } else {\n            video.src = window.URL.createObjectURL(stream); // for older browsers\n          }\n\n          video.play();\n        });\n        \n      })\n      .catch(() => {});\n  };\n\n  const sendMsg = (msg) => {\n    peer.send(msg);\n    messageListReducer({\n      type: \"addMessage\",\n      payload: {\n        user: \"you\",\n        msg: msg,\n        time: Date.now(),\n      },\n    });\n  };\n\n  const screenShare = () => {\n    navigator.mediaDevices\n      .getDisplayMedia({ cursor: true })\n      .then((screenStream) => {\n        peer.replaceTrack(\n          streamObj.getVideoTracks()[0],\n          screenStream.getVideoTracks()[0],\n          streamObj\n        );\n        setScreenCastStream(screenStream);\n        screenStream.getTracks()[0].onended = () => {\n          peer.replaceTrack(\n            screenStream.getVideoTracks()[0],\n            streamObj.getVideoTracks()[0],\n            streamObj\n          );\n        };\n        setIsPresenting(true);\n      });\n  };\n\n  const stopScreenShare = () => {\n    screenCastStream.getVideoTracks().forEach(function (track) {\n      track.stop();\n    });\n    peer.replaceTrack(\n      screenCastStream.getVideoTracks()[0],\n      streamObj.getVideoTracks()[0],\n      streamObj\n    );\n    setIsPresenting(false);\n  };\n\n  const toggleAudio = (value) => {\n    streamObj.getAudioTracks()[0].enabled = value;\n    setIsAudio(value);\n  };\n\n  const disconnectCall = () => {\n    peer.destroy();\n    history.push(\"/\");\n    window.location.reload();\n  };\n\n  return (\n    <div className=\"callpage-container\">\n      <video className=\"video-container\" src=\"\" controls></video>\n\n      <CallPageHeader\n        isMessenger={isMessenger}\n        setIsMessenger={setIsMessenger}\n        messageAlert={messageAlert}\n        setMessageAlert={setMessageAlert}\n      />\n      <CallPageFooter\n        isPresenting={isPresenting}\n        stopScreenShare={stopScreenShare}\n        screenShare={screenShare}\n        isAudio={isAudio}\n        toggleAudio={toggleAudio}\n        disconnectCall={disconnectCall}\n      />\n\n      {isAdmin && meetInfoPopup && (\n        <MeetingInfo setMeetInfoPopup={setMeetInfoPopup} url={url} />\n      )}\n      {isMessenger ? (\n        <Messenger\n          setIsMessenger={setIsMessenger}\n          sendMsg={sendMsg}\n          messageList={messageList}\n        />\n      ) : (\n        messageAlert.isPopup && <Alert messageAlert={messageAlert} />\n      )}\n    </div>\n  );\n};\nexport default CallPage;\n","import { Link } from \"react-router-dom\";\nimport \"./NoMatch.scss\";\nimport Header from \"../UI/Header/Header\";\n\nconst NoMatch = () => {\n  return (\n    <div className=\"no-match\">\n      <Header />\n      <div className=\"no-match__content\">\n        <h2>Invalid video call name.</h2>\n        <div className=\"action-btn\">\n          <Link className=\"btn green\" to=\"/\">\n            Return to home screen\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default NoMatch;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.scss\";\nimport HomePage from \"./components/HomePage/HomePage\";\nimport CallPage from \"./components/CallPage/CallPage\";\nimport NoMatch from \"./components/NoMatch/NoMatch\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/:id\">\n          <CallPage />\n        </Route>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n        <Route path=\"*\">\n          <NoMatch />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}